{"version":3,"sources":["components/form.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startDate","Date","name","number","externalCustomer","handleDateChange","bind","assertThisInitialized","handleNameChange","handleNumberChange","handleCheckboxChange","handleSubmit","date","setState","target","value","e","console","log","checkValidity","options","map","time","react_default","a","createElement","today","dd","getDate","mm","getMonth","now","getFullYear","FormWrapper","Header","action","ItemWrapper","Input","type","id","placeholder","onChange","required","style","display","DateWrapper","min","toString","ButtonWrapper","Button","Component","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","button","_templateObject5","input","_templateObject6","h1","_templateObject7","App","AppWrapper","form_Form","App_templateObject","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33b372f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// const CALENDAR_ID = 't7dadt31kvscslmummfasftc08@group.calendar.google.com'\r\n// const API_KEY = 'AIzaSyATKGl2Zieu9yxu4FsxUgiBIE716db_Nac'\r\n// let url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`\r\n\r\nexport default class Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(),\r\n      name: '',\r\n      number: 0,\r\n      externalCustomer: false,\r\n\r\n    };\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNumberChange = this.handleNumberChange.bind(this);\r\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n  handleNameChange(name) {\r\n    this.setState({\r\n      name: name.target.value\r\n    });\r\n  }\r\n  handleNumberChange(number) {\r\n    this.setState({\r\n      number: number.target.value\r\n    });\r\n  }\r\n  handleCheckboxChange() {\r\n    const { externalCustomer } = this.state;\r\n    this.setState({\r\n      externalCustomer: !externalCustomer\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    console.log(e.target.checkValidity());\r\n  }\r\n\r\n  //entry.395002384 external cust\r\n  //&entry.395002384=extcust&entry.1922675186=2019-02-27&entry.1720502080=10:23\r\n  render() {\r\n    const times = [\r\n      '9:00AM',\r\n      '9:30AM',\r\n      '10:00AM',\r\n      '10:30AM',\r\n      '11:00AM',\r\n      '11:30AM',\r\n      '12:00PM',\r\n      '12:30PM',\r\n      '1:00PM',\r\n      '1:30PM',\r\n      '2:00PM',\r\n      '2:30PM',\r\n      '3:00PM',\r\n      '3:30PM',\r\n      '4:00PM',\r\n      '4:30PM',\r\n      '5:00PM',\r\n    ];\r\n    const options = times.map((time) => {\r\n      return (\r\n        <option\r\n          value={time}\r\n        >\r\n          {time}\r\n        </option>\r\n      )\r\n    })\r\n\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    const now = yyyy + '-' + mm + '-' + dd;\r\n    console.log(now)\r\n    return (\r\n      <FormWrapper>\r\n        <Header>DDAO Tour Request</Header>\r\n        <form\r\n          action=' https://docs.google.com/forms/d/e/1FAIpQLScX5YkC5wqWQ778aLBpzWGYQWs62TYNAI-vSoLmjbi5SD3xLA/formResponse?usp=pp_url&'\r\n          target='hidden_iframe'>\r\n          <ItemWrapper>\r\n            <label>\r\n              Name:\r\n            </label>\r\n            <Input\r\n              type='text'\r\n              name='entry.988151643'\r\n              id='entry.988151643'\r\n              placeholder='Name'\r\n              onChange={this.handleNameChange}\r\n              required\r\n            />\r\n          </ItemWrapper>\r\n          <ItemWrapper>\r\n            <label>\r\n              Email:\r\n            </label>\r\n            <Input\r\n              type='text'\r\n              name='entry.988151643'\r\n              id='entry.988151643'\r\n              placeholder='Email'\r\n              onChange={this.handleNameChange}\r\n            />\r\n          </ItemWrapper>\r\n          <ItemWrapper>\r\n            <label>\r\n              Phone Number:\r\n            </label>\r\n            <Input\r\n              type='text'\r\n              name='entry.988151643'\r\n              id='entry.988151643'\r\n              placeholder='Phone Number'\r\n              onChange={this.handleNameChange}\r\n            />\r\n          </ItemWrapper>\r\n          <ItemWrapper>\r\n            <label>\r\n              Number of Visitors:\r\n            </label>\r\n            <Input\r\n              type='number'\r\n              name='entry.1790580931'\r\n              id='entry.1790580931'\r\n              onChange={this.handleNumberChange}\r\n              required\r\n              placeholder='Number of Visitors'\r\n            />\r\n          </ItemWrapper>\r\n          <ItemWrapper>\r\n            <div>\r\n              <label>\r\n                External Customer:\r\n        </label>\r\n              <Input\r\n                type='checkbox'\r\n                onChange={this.handleCheckboxChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Input\r\n                type='text'\r\n                name='entry.395002384'\r\n                id='entry.395002384'\r\n                placeholder='External Customer'\r\n                style={this.state.externalCustomer ? { display: 'block' } : { display: 'none' }}\r\n              />\r\n\r\n            </div>\r\n          </ItemWrapper>\r\n          <DateWrapper>\r\n            <div>\r\n              <label>\r\n                Select Date:\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <Input\r\n                type='date'\r\n                name='entry.1922675186'\r\n                id='entry.1922675186'\r\n                min={now}\r\n                value={now.toString}\r\n                required\r\n              />\r\n              <select\r\n                name='entry.1720502080'\r\n                id='entry.1720502080'>\r\n                {options}\r\n              </select>\r\n            </div>\r\n          </DateWrapper>\r\n          <ButtonWrapper>\r\n            <Button\r\n              type='submit'\r\n            >\r\n              submit\r\n          </Button>\r\n          </ButtonWrapper>\r\n        </form>\r\n        <iframe name=\"hidden_iframe\" id=\"hidden_iframe\" style={{ display: 'none' }}></iframe>\r\n      </FormWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  padding: 2.5%;\r\n  height: 50%;\r\n  width: 400px;\r\n  border: 2px rgba(0, 0, 0, .15) solid;\r\n  border-radius: 25px\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: space-around;\r\n  @media(max-width: 450px) {\r\n    width:90%;\r\n  }\r\n  @media(max-width: 375px) {\r\n    height:75%\r\n    align-items: space-between;\r\n  }\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  height: 25px\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: .75em\r\n  @media( min-width:300px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\nconst DateWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px\r\n  @media( min-width:300px) {\r\n    flex-direction: row;\r\n  }\r\n    :focus {\r\n      outline:none;\r\n    border:2px rgba(254, 4, 4, .5) solid;\r\n  }\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px\r\n  @media( min-width:300px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  background-color: rgba(254, 4, 4, .25);\r\n  margin: auto;\r\n  width: 50%;\r\n  align-self: center;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border: 1px rgba(0, 0, 0, .15) solid;\r\n  border-radius: 10px;\r\n  :focus {\r\n      outline:none;\r\n    border:2px rgba(254, 4, 4, .5) solid;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  :focus {\r\n      outline:none;\r\n    border:2px rgba(254, 4, 4, .5) solid;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\ncolor: rgba(254, 4, 4);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport Form from './components/form';\r\nimport styled from 'styled-components';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <AppWrapper>\r\n        <Form />\r\n      </AppWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppWrapper = styled.div`\r\n  height: 100vh;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}